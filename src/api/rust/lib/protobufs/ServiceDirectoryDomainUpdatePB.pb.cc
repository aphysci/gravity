// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServiceDirectoryDomainUpdatePB.proto

#include "ServiceDirectoryDomainUpdatePB.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace gravity {
PROTOBUF_CONSTEXPR ServiceDirectoryDomainUpdatePB::ServiceDirectoryDomainUpdatePB(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.known_domains_)*/{}
  , /*decltype(_impl_.update_domain_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.type_)*/1} {}
struct ServiceDirectoryDomainUpdatePBDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServiceDirectoryDomainUpdatePBDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServiceDirectoryDomainUpdatePBDefaultTypeInternal() {}
  union {
    ServiceDirectoryDomainUpdatePB _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServiceDirectoryDomainUpdatePBDefaultTypeInternal _ServiceDirectoryDomainUpdatePB_default_instance_;
}  // namespace gravity
static ::_pb::Metadata file_level_metadata_ServiceDirectoryDomainUpdatePB_2eproto[1];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_ServiceDirectoryDomainUpdatePB_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_ServiceDirectoryDomainUpdatePB_2eproto = nullptr;

const uint32_t TableStruct_ServiceDirectoryDomainUpdatePB_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::gravity::ServiceDirectoryDomainUpdatePB, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::gravity::ServiceDirectoryDomainUpdatePB, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gravity::ServiceDirectoryDomainUpdatePB, _impl_.known_domains_),
  PROTOBUF_FIELD_OFFSET(::gravity::ServiceDirectoryDomainUpdatePB, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::gravity::ServiceDirectoryDomainUpdatePB, _impl_.update_domain_),
  ~0u,
  1,
  0,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, -1, sizeof(::gravity::ServiceDirectoryDomainUpdatePB)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::gravity::_ServiceDirectoryDomainUpdatePB_default_instance_._instance,
};

const char descriptor_table_protodef_ServiceDirectoryDomainUpdatePB_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n$ServiceDirectoryDomainUpdatePB.proto\022\007"
  "gravity\"\263\001\n\036ServiceDirectoryDomainUpdate"
  "PB\022\025\n\rknown_domains\030\001 \003(\t\022@\n\004type\030\002 \001(\0162"
  "2.gravity.ServiceDirectoryDomainUpdatePB"
  ".UpdateType\022\025\n\rupdate_domain\030\003 \001(\t\"!\n\nUp"
  "dateType\022\007\n\003ADD\020\001\022\n\n\006REMOVE\020\002BG\n\034com.aph"
  "ysci.gravity.protobufB%ServiceDirectoryD"
  "omainUpdateContainerH\001"
  ;
static ::_pbi::once_flag descriptor_table_ServiceDirectoryDomainUpdatePB_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ServiceDirectoryDomainUpdatePB_2eproto = {
    false, false, 302, descriptor_table_protodef_ServiceDirectoryDomainUpdatePB_2eproto,
    "ServiceDirectoryDomainUpdatePB.proto",
    &descriptor_table_ServiceDirectoryDomainUpdatePB_2eproto_once, nullptr, 0, 1,
    schemas, file_default_instances, TableStruct_ServiceDirectoryDomainUpdatePB_2eproto::offsets,
    file_level_metadata_ServiceDirectoryDomainUpdatePB_2eproto, file_level_enum_descriptors_ServiceDirectoryDomainUpdatePB_2eproto,
    file_level_service_descriptors_ServiceDirectoryDomainUpdatePB_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ServiceDirectoryDomainUpdatePB_2eproto_getter() {
  return &descriptor_table_ServiceDirectoryDomainUpdatePB_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ServiceDirectoryDomainUpdatePB_2eproto(&descriptor_table_ServiceDirectoryDomainUpdatePB_2eproto);
namespace gravity {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ServiceDirectoryDomainUpdatePB_UpdateType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ServiceDirectoryDomainUpdatePB_2eproto);
  return file_level_enum_descriptors_ServiceDirectoryDomainUpdatePB_2eproto[0];
}
bool ServiceDirectoryDomainUpdatePB_UpdateType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr ServiceDirectoryDomainUpdatePB_UpdateType ServiceDirectoryDomainUpdatePB::ADD;
constexpr ServiceDirectoryDomainUpdatePB_UpdateType ServiceDirectoryDomainUpdatePB::REMOVE;
constexpr ServiceDirectoryDomainUpdatePB_UpdateType ServiceDirectoryDomainUpdatePB::UpdateType_MIN;
constexpr ServiceDirectoryDomainUpdatePB_UpdateType ServiceDirectoryDomainUpdatePB::UpdateType_MAX;
constexpr int ServiceDirectoryDomainUpdatePB::UpdateType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class ServiceDirectoryDomainUpdatePB::_Internal {
 public:
  using HasBits = decltype(std::declval<ServiceDirectoryDomainUpdatePB>()._impl_._has_bits_);
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_update_domain(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ServiceDirectoryDomainUpdatePB::ServiceDirectoryDomainUpdatePB(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gravity.ServiceDirectoryDomainUpdatePB)
}
ServiceDirectoryDomainUpdatePB::ServiceDirectoryDomainUpdatePB(const ServiceDirectoryDomainUpdatePB& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ServiceDirectoryDomainUpdatePB* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.known_domains_){from._impl_.known_domains_}
    , decltype(_impl_.update_domain_){}
    , decltype(_impl_.type_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.update_domain_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.update_domain_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_update_domain()) {
    _this->_impl_.update_domain_.Set(from._internal_update_domain(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.type_ = from._impl_.type_;
  // @@protoc_insertion_point(copy_constructor:gravity.ServiceDirectoryDomainUpdatePB)
}

inline void ServiceDirectoryDomainUpdatePB::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.known_domains_){arena}
    , decltype(_impl_.update_domain_){}
    , decltype(_impl_.type_){1}
  };
  _impl_.update_domain_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.update_domain_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ServiceDirectoryDomainUpdatePB::~ServiceDirectoryDomainUpdatePB() {
  // @@protoc_insertion_point(destructor:gravity.ServiceDirectoryDomainUpdatePB)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ServiceDirectoryDomainUpdatePB::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.known_domains_.~RepeatedPtrField();
  _impl_.update_domain_.Destroy();
}

void ServiceDirectoryDomainUpdatePB::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ServiceDirectoryDomainUpdatePB::Clear() {
// @@protoc_insertion_point(message_clear_start:gravity.ServiceDirectoryDomainUpdatePB)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.known_domains_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.update_domain_.ClearNonDefaultToEmpty();
    }
    _impl_.type_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServiceDirectoryDomainUpdatePB::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string known_domains = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_known_domains();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            #ifndef NDEBUG
            ::_pbi::VerifyUTF8(str, "gravity.ServiceDirectoryDomainUpdatePB.known_domains");
            #endif  // !NDEBUG
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional .gravity.ServiceDirectoryDomainUpdatePB.UpdateType type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::gravity::ServiceDirectoryDomainUpdatePB_UpdateType_IsValid(val))) {
            _internal_set_type(static_cast<::gravity::ServiceDirectoryDomainUpdatePB_UpdateType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional string update_domain = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_update_domain();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "gravity.ServiceDirectoryDomainUpdatePB.update_domain");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ServiceDirectoryDomainUpdatePB::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gravity.ServiceDirectoryDomainUpdatePB)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string known_domains = 1;
  for (int i = 0, n = this->_internal_known_domains_size(); i < n; i++) {
    const auto& s = this->_internal_known_domains(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "gravity.ServiceDirectoryDomainUpdatePB.known_domains");
    target = stream->WriteString(1, s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .gravity.ServiceDirectoryDomainUpdatePB.UpdateType type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_type(), target);
  }

  // optional string update_domain = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_update_domain().data(), static_cast<int>(this->_internal_update_domain().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "gravity.ServiceDirectoryDomainUpdatePB.update_domain");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_update_domain(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gravity.ServiceDirectoryDomainUpdatePB)
  return target;
}

size_t ServiceDirectoryDomainUpdatePB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gravity.ServiceDirectoryDomainUpdatePB)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string known_domains = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.known_domains_.size());
  for (int i = 0, n = _impl_.known_domains_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.known_domains_.Get(i));
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string update_domain = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_update_domain());
    }

    // optional .gravity.ServiceDirectoryDomainUpdatePB.UpdateType type = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ServiceDirectoryDomainUpdatePB::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ServiceDirectoryDomainUpdatePB::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ServiceDirectoryDomainUpdatePB::GetClassData() const { return &_class_data_; }


void ServiceDirectoryDomainUpdatePB::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ServiceDirectoryDomainUpdatePB*>(&to_msg);
  auto& from = static_cast<const ServiceDirectoryDomainUpdatePB&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gravity.ServiceDirectoryDomainUpdatePB)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.known_domains_.MergeFrom(from._impl_.known_domains_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_update_domain(from._internal_update_domain());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ServiceDirectoryDomainUpdatePB::CopyFrom(const ServiceDirectoryDomainUpdatePB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gravity.ServiceDirectoryDomainUpdatePB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceDirectoryDomainUpdatePB::IsInitialized() const {
  return true;
}

void ServiceDirectoryDomainUpdatePB::InternalSwap(ServiceDirectoryDomainUpdatePB* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.known_domains_.InternalSwap(&other->_impl_.known_domains_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.update_domain_, lhs_arena,
      &other->_impl_.update_domain_, rhs_arena
  );
  swap(_impl_.type_, other->_impl_.type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ServiceDirectoryDomainUpdatePB::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ServiceDirectoryDomainUpdatePB_2eproto_getter, &descriptor_table_ServiceDirectoryDomainUpdatePB_2eproto_once,
      file_level_metadata_ServiceDirectoryDomainUpdatePB_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace gravity
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::gravity::ServiceDirectoryDomainUpdatePB*
Arena::CreateMaybeMessage< ::gravity::ServiceDirectoryDomainUpdatePB >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gravity::ServiceDirectoryDomainUpdatePB >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
