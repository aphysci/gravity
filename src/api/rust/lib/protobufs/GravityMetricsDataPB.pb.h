// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GravityMetricsDataPB.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_GravityMetricsDataPB_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_GravityMetricsDataPB_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_GravityMetricsDataPB_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_GravityMetricsDataPB_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_GravityMetricsDataPB_2eproto;
namespace gravity {
class GravityMetricsDataPB;
struct GravityMetricsDataPBDefaultTypeInternal;
extern GravityMetricsDataPBDefaultTypeInternal _GravityMetricsDataPB_default_instance_;
class GravityMetricsPB;
struct GravityMetricsPBDefaultTypeInternal;
extern GravityMetricsPBDefaultTypeInternal _GravityMetricsPB_default_instance_;
}  // namespace gravity
PROTOBUF_NAMESPACE_OPEN
template<> ::gravity::GravityMetricsDataPB* Arena::CreateMaybeMessage<::gravity::GravityMetricsDataPB>(Arena*);
template<> ::gravity::GravityMetricsPB* Arena::CreateMaybeMessage<::gravity::GravityMetricsPB>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace gravity {

enum GravityMetricsPB_MessageType : int {
  GravityMetricsPB_MessageType_PUBLICATION = 0,
  GravityMetricsPB_MessageType_SUBSCRIPTION = 1,
  GravityMetricsPB_MessageType_REQUEST = 2,
  GravityMetricsPB_MessageType_RESPONSE = 3
};
bool GravityMetricsPB_MessageType_IsValid(int value);
constexpr GravityMetricsPB_MessageType GravityMetricsPB_MessageType_MessageType_MIN = GravityMetricsPB_MessageType_PUBLICATION;
constexpr GravityMetricsPB_MessageType GravityMetricsPB_MessageType_MessageType_MAX = GravityMetricsPB_MessageType_RESPONSE;
constexpr int GravityMetricsPB_MessageType_MessageType_ARRAYSIZE = GravityMetricsPB_MessageType_MessageType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GravityMetricsPB_MessageType_descriptor();
template<typename T>
inline const std::string& GravityMetricsPB_MessageType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, GravityMetricsPB_MessageType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function GravityMetricsPB_MessageType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    GravityMetricsPB_MessageType_descriptor(), enum_t_value);
}
inline bool GravityMetricsPB_MessageType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, GravityMetricsPB_MessageType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<GravityMetricsPB_MessageType>(
    GravityMetricsPB_MessageType_descriptor(), name, value);
}
// ===================================================================

class GravityMetricsPB final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gravity.GravityMetricsPB) */ {
 public:
  inline GravityMetricsPB() : GravityMetricsPB(nullptr) {}
  ~GravityMetricsPB() override;
  explicit PROTOBUF_CONSTEXPR GravityMetricsPB(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GravityMetricsPB(const GravityMetricsPB& from);
  GravityMetricsPB(GravityMetricsPB&& from) noexcept
    : GravityMetricsPB() {
    *this = ::std::move(from);
  }

  inline GravityMetricsPB& operator=(const GravityMetricsPB& from) {
    CopyFrom(from);
    return *this;
  }
  inline GravityMetricsPB& operator=(GravityMetricsPB&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GravityMetricsPB& default_instance() {
    return *internal_default_instance();
  }
  static inline const GravityMetricsPB* internal_default_instance() {
    return reinterpret_cast<const GravityMetricsPB*>(
               &_GravityMetricsPB_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GravityMetricsPB& a, GravityMetricsPB& b) {
    a.Swap(&b);
  }
  inline void Swap(GravityMetricsPB* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GravityMetricsPB* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GravityMetricsPB* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GravityMetricsPB>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GravityMetricsPB& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GravityMetricsPB& from) {
    GravityMetricsPB::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GravityMetricsPB* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gravity.GravityMetricsPB";
  }
  protected:
  explicit GravityMetricsPB(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GravityMetricsPB_MessageType MessageType;
  static constexpr MessageType PUBLICATION =
    GravityMetricsPB_MessageType_PUBLICATION;
  static constexpr MessageType SUBSCRIPTION =
    GravityMetricsPB_MessageType_SUBSCRIPTION;
  static constexpr MessageType REQUEST =
    GravityMetricsPB_MessageType_REQUEST;
  static constexpr MessageType RESPONSE =
    GravityMetricsPB_MessageType_RESPONSE;
  static inline bool MessageType_IsValid(int value) {
    return GravityMetricsPB_MessageType_IsValid(value);
  }
  static constexpr MessageType MessageType_MIN =
    GravityMetricsPB_MessageType_MessageType_MIN;
  static constexpr MessageType MessageType_MAX =
    GravityMetricsPB_MessageType_MessageType_MAX;
  static constexpr int MessageType_ARRAYSIZE =
    GravityMetricsPB_MessageType_MessageType_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  MessageType_descriptor() {
    return GravityMetricsPB_MessageType_descriptor();
  }
  template<typename T>
  static inline const std::string& MessageType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, MessageType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function MessageType_Name.");
    return GravityMetricsPB_MessageType_Name(enum_t_value);
  }
  static inline bool MessageType_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      MessageType* value) {
    return GravityMetricsPB_MessageType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kStartTimeFieldNumber = 3,
    kEndTimeFieldNumber = 4,
    kNumBytesFieldNumber = 5,
    kNumMessagesFieldNumber = 6,
    kDataProductIDFieldNumber = 1,
    kMessageTypeFieldNumber = 2,
  };
  // repeated uint64 startTime = 3 [packed = true];
  int starttime_size() const;
  private:
  int _internal_starttime_size() const;
  public:
  void clear_starttime();
  private:
  uint64_t _internal_starttime(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_starttime() const;
  void _internal_add_starttime(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_starttime();
  public:
  uint64_t starttime(int index) const;
  void set_starttime(int index, uint64_t value);
  void add_starttime(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      starttime() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_starttime();

  // repeated uint64 endTime = 4 [packed = true];
  int endtime_size() const;
  private:
  int _internal_endtime_size() const;
  public:
  void clear_endtime();
  private:
  uint64_t _internal_endtime(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_endtime() const;
  void _internal_add_endtime(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_endtime();
  public:
  uint64_t endtime(int index) const;
  void set_endtime(int index, uint64_t value);
  void add_endtime(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      endtime() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_endtime();

  // repeated uint32 numBytes = 5 [packed = true];
  int numbytes_size() const;
  private:
  int _internal_numbytes_size() const;
  public:
  void clear_numbytes();
  private:
  uint32_t _internal_numbytes(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_numbytes() const;
  void _internal_add_numbytes(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_numbytes();
  public:
  uint32_t numbytes(int index) const;
  void set_numbytes(int index, uint32_t value);
  void add_numbytes(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      numbytes() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_numbytes();

  // repeated uint32 numMessages = 6 [packed = true];
  int nummessages_size() const;
  private:
  int _internal_nummessages_size() const;
  public:
  void clear_nummessages();
  private:
  uint32_t _internal_nummessages(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_nummessages() const;
  void _internal_add_nummessages(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_nummessages();
  public:
  uint32_t nummessages(int index) const;
  void set_nummessages(int index, uint32_t value);
  void add_nummessages(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      nummessages() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_nummessages();

  // optional string dataProductID = 1;
  bool has_dataproductid() const;
  private:
  bool _internal_has_dataproductid() const;
  public:
  void clear_dataproductid();
  const std::string& dataproductid() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_dataproductid(ArgT0&& arg0, ArgT... args);
  std::string* mutable_dataproductid();
  PROTOBUF_NODISCARD std::string* release_dataproductid();
  void set_allocated_dataproductid(std::string* dataproductid);
  private:
  const std::string& _internal_dataproductid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dataproductid(const std::string& value);
  std::string* _internal_mutable_dataproductid();
  public:

  // optional .gravity.GravityMetricsPB.MessageType messageType = 2;
  bool has_messagetype() const;
  private:
  bool _internal_has_messagetype() const;
  public:
  void clear_messagetype();
  ::gravity::GravityMetricsPB_MessageType messagetype() const;
  void set_messagetype(::gravity::GravityMetricsPB_MessageType value);
  private:
  ::gravity::GravityMetricsPB_MessageType _internal_messagetype() const;
  void _internal_set_messagetype(::gravity::GravityMetricsPB_MessageType value);
  public:

  // @@protoc_insertion_point(class_scope:gravity.GravityMetricsPB)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > starttime_;
    mutable std::atomic<int> _starttime_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > endtime_;
    mutable std::atomic<int> _endtime_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > numbytes_;
    mutable std::atomic<int> _numbytes_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > nummessages_;
    mutable std::atomic<int> _nummessages_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr dataproductid_;
    int messagetype_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_GravityMetricsDataPB_2eproto;
};
// -------------------------------------------------------------------

class GravityMetricsDataPB final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gravity.GravityMetricsDataPB) */ {
 public:
  inline GravityMetricsDataPB() : GravityMetricsDataPB(nullptr) {}
  ~GravityMetricsDataPB() override;
  explicit PROTOBUF_CONSTEXPR GravityMetricsDataPB(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GravityMetricsDataPB(const GravityMetricsDataPB& from);
  GravityMetricsDataPB(GravityMetricsDataPB&& from) noexcept
    : GravityMetricsDataPB() {
    *this = ::std::move(from);
  }

  inline GravityMetricsDataPB& operator=(const GravityMetricsDataPB& from) {
    CopyFrom(from);
    return *this;
  }
  inline GravityMetricsDataPB& operator=(GravityMetricsDataPB&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GravityMetricsDataPB& default_instance() {
    return *internal_default_instance();
  }
  static inline const GravityMetricsDataPB* internal_default_instance() {
    return reinterpret_cast<const GravityMetricsDataPB*>(
               &_GravityMetricsDataPB_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GravityMetricsDataPB& a, GravityMetricsDataPB& b) {
    a.Swap(&b);
  }
  inline void Swap(GravityMetricsDataPB* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GravityMetricsDataPB* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GravityMetricsDataPB* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GravityMetricsDataPB>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GravityMetricsDataPB& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GravityMetricsDataPB& from) {
    GravityMetricsDataPB::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GravityMetricsDataPB* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gravity.GravityMetricsDataPB";
  }
  protected:
  explicit GravityMetricsDataPB(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMetricsFieldNumber = 3,
    kComponentIDFieldNumber = 1,
    kIpAddressFieldNumber = 2,
  };
  // repeated .gravity.GravityMetricsPB metrics = 3;
  int metrics_size() const;
  private:
  int _internal_metrics_size() const;
  public:
  void clear_metrics();
  ::gravity::GravityMetricsPB* mutable_metrics(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gravity::GravityMetricsPB >*
      mutable_metrics();
  private:
  const ::gravity::GravityMetricsPB& _internal_metrics(int index) const;
  ::gravity::GravityMetricsPB* _internal_add_metrics();
  public:
  const ::gravity::GravityMetricsPB& metrics(int index) const;
  ::gravity::GravityMetricsPB* add_metrics();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gravity::GravityMetricsPB >&
      metrics() const;

  // optional string componentID = 1;
  bool has_componentid() const;
  private:
  bool _internal_has_componentid() const;
  public:
  void clear_componentid();
  const std::string& componentid() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_componentid(ArgT0&& arg0, ArgT... args);
  std::string* mutable_componentid();
  PROTOBUF_NODISCARD std::string* release_componentid();
  void set_allocated_componentid(std::string* componentid);
  private:
  const std::string& _internal_componentid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_componentid(const std::string& value);
  std::string* _internal_mutable_componentid();
  public:

  // optional string ipAddress = 2;
  bool has_ipaddress() const;
  private:
  bool _internal_has_ipaddress() const;
  public:
  void clear_ipaddress();
  const std::string& ipaddress() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_ipaddress(ArgT0&& arg0, ArgT... args);
  std::string* mutable_ipaddress();
  PROTOBUF_NODISCARD std::string* release_ipaddress();
  void set_allocated_ipaddress(std::string* ipaddress);
  private:
  const std::string& _internal_ipaddress() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ipaddress(const std::string& value);
  std::string* _internal_mutable_ipaddress();
  public:

  // @@protoc_insertion_point(class_scope:gravity.GravityMetricsDataPB)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gravity::GravityMetricsPB > metrics_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr componentid_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr ipaddress_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_GravityMetricsDataPB_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GravityMetricsPB

// optional string dataProductID = 1;
inline bool GravityMetricsPB::_internal_has_dataproductid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool GravityMetricsPB::has_dataproductid() const {
  return _internal_has_dataproductid();
}
inline void GravityMetricsPB::clear_dataproductid() {
  _impl_.dataproductid_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GravityMetricsPB::dataproductid() const {
  // @@protoc_insertion_point(field_get:gravity.GravityMetricsPB.dataProductID)
  return _internal_dataproductid();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GravityMetricsPB::set_dataproductid(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.dataproductid_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:gravity.GravityMetricsPB.dataProductID)
}
inline std::string* GravityMetricsPB::mutable_dataproductid() {
  std::string* _s = _internal_mutable_dataproductid();
  // @@protoc_insertion_point(field_mutable:gravity.GravityMetricsPB.dataProductID)
  return _s;
}
inline const std::string& GravityMetricsPB::_internal_dataproductid() const {
  return _impl_.dataproductid_.Get();
}
inline void GravityMetricsPB::_internal_set_dataproductid(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.dataproductid_.Set(value, GetArenaForAllocation());
}
inline std::string* GravityMetricsPB::_internal_mutable_dataproductid() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.dataproductid_.Mutable(GetArenaForAllocation());
}
inline std::string* GravityMetricsPB::release_dataproductid() {
  // @@protoc_insertion_point(field_release:gravity.GravityMetricsPB.dataProductID)
  if (!_internal_has_dataproductid()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.dataproductid_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.dataproductid_.IsDefault()) {
    _impl_.dataproductid_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GravityMetricsPB::set_allocated_dataproductid(std::string* dataproductid) {
  if (dataproductid != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.dataproductid_.SetAllocated(dataproductid, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.dataproductid_.IsDefault()) {
    _impl_.dataproductid_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:gravity.GravityMetricsPB.dataProductID)
}

// optional .gravity.GravityMetricsPB.MessageType messageType = 2;
inline bool GravityMetricsPB::_internal_has_messagetype() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool GravityMetricsPB::has_messagetype() const {
  return _internal_has_messagetype();
}
inline void GravityMetricsPB::clear_messagetype() {
  _impl_.messagetype_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::gravity::GravityMetricsPB_MessageType GravityMetricsPB::_internal_messagetype() const {
  return static_cast< ::gravity::GravityMetricsPB_MessageType >(_impl_.messagetype_);
}
inline ::gravity::GravityMetricsPB_MessageType GravityMetricsPB::messagetype() const {
  // @@protoc_insertion_point(field_get:gravity.GravityMetricsPB.messageType)
  return _internal_messagetype();
}
inline void GravityMetricsPB::_internal_set_messagetype(::gravity::GravityMetricsPB_MessageType value) {
  assert(::gravity::GravityMetricsPB_MessageType_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.messagetype_ = value;
}
inline void GravityMetricsPB::set_messagetype(::gravity::GravityMetricsPB_MessageType value) {
  _internal_set_messagetype(value);
  // @@protoc_insertion_point(field_set:gravity.GravityMetricsPB.messageType)
}

// repeated uint64 startTime = 3 [packed = true];
inline int GravityMetricsPB::_internal_starttime_size() const {
  return _impl_.starttime_.size();
}
inline int GravityMetricsPB::starttime_size() const {
  return _internal_starttime_size();
}
inline void GravityMetricsPB::clear_starttime() {
  _impl_.starttime_.Clear();
}
inline uint64_t GravityMetricsPB::_internal_starttime(int index) const {
  return _impl_.starttime_.Get(index);
}
inline uint64_t GravityMetricsPB::starttime(int index) const {
  // @@protoc_insertion_point(field_get:gravity.GravityMetricsPB.startTime)
  return _internal_starttime(index);
}
inline void GravityMetricsPB::set_starttime(int index, uint64_t value) {
  _impl_.starttime_.Set(index, value);
  // @@protoc_insertion_point(field_set:gravity.GravityMetricsPB.startTime)
}
inline void GravityMetricsPB::_internal_add_starttime(uint64_t value) {
  _impl_.starttime_.Add(value);
}
inline void GravityMetricsPB::add_starttime(uint64_t value) {
  _internal_add_starttime(value);
  // @@protoc_insertion_point(field_add:gravity.GravityMetricsPB.startTime)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
GravityMetricsPB::_internal_starttime() const {
  return _impl_.starttime_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
GravityMetricsPB::starttime() const {
  // @@protoc_insertion_point(field_list:gravity.GravityMetricsPB.startTime)
  return _internal_starttime();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
GravityMetricsPB::_internal_mutable_starttime() {
  return &_impl_.starttime_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
GravityMetricsPB::mutable_starttime() {
  // @@protoc_insertion_point(field_mutable_list:gravity.GravityMetricsPB.startTime)
  return _internal_mutable_starttime();
}

// repeated uint64 endTime = 4 [packed = true];
inline int GravityMetricsPB::_internal_endtime_size() const {
  return _impl_.endtime_.size();
}
inline int GravityMetricsPB::endtime_size() const {
  return _internal_endtime_size();
}
inline void GravityMetricsPB::clear_endtime() {
  _impl_.endtime_.Clear();
}
inline uint64_t GravityMetricsPB::_internal_endtime(int index) const {
  return _impl_.endtime_.Get(index);
}
inline uint64_t GravityMetricsPB::endtime(int index) const {
  // @@protoc_insertion_point(field_get:gravity.GravityMetricsPB.endTime)
  return _internal_endtime(index);
}
inline void GravityMetricsPB::set_endtime(int index, uint64_t value) {
  _impl_.endtime_.Set(index, value);
  // @@protoc_insertion_point(field_set:gravity.GravityMetricsPB.endTime)
}
inline void GravityMetricsPB::_internal_add_endtime(uint64_t value) {
  _impl_.endtime_.Add(value);
}
inline void GravityMetricsPB::add_endtime(uint64_t value) {
  _internal_add_endtime(value);
  // @@protoc_insertion_point(field_add:gravity.GravityMetricsPB.endTime)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
GravityMetricsPB::_internal_endtime() const {
  return _impl_.endtime_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
GravityMetricsPB::endtime() const {
  // @@protoc_insertion_point(field_list:gravity.GravityMetricsPB.endTime)
  return _internal_endtime();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
GravityMetricsPB::_internal_mutable_endtime() {
  return &_impl_.endtime_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
GravityMetricsPB::mutable_endtime() {
  // @@protoc_insertion_point(field_mutable_list:gravity.GravityMetricsPB.endTime)
  return _internal_mutable_endtime();
}

// repeated uint32 numBytes = 5 [packed = true];
inline int GravityMetricsPB::_internal_numbytes_size() const {
  return _impl_.numbytes_.size();
}
inline int GravityMetricsPB::numbytes_size() const {
  return _internal_numbytes_size();
}
inline void GravityMetricsPB::clear_numbytes() {
  _impl_.numbytes_.Clear();
}
inline uint32_t GravityMetricsPB::_internal_numbytes(int index) const {
  return _impl_.numbytes_.Get(index);
}
inline uint32_t GravityMetricsPB::numbytes(int index) const {
  // @@protoc_insertion_point(field_get:gravity.GravityMetricsPB.numBytes)
  return _internal_numbytes(index);
}
inline void GravityMetricsPB::set_numbytes(int index, uint32_t value) {
  _impl_.numbytes_.Set(index, value);
  // @@protoc_insertion_point(field_set:gravity.GravityMetricsPB.numBytes)
}
inline void GravityMetricsPB::_internal_add_numbytes(uint32_t value) {
  _impl_.numbytes_.Add(value);
}
inline void GravityMetricsPB::add_numbytes(uint32_t value) {
  _internal_add_numbytes(value);
  // @@protoc_insertion_point(field_add:gravity.GravityMetricsPB.numBytes)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
GravityMetricsPB::_internal_numbytes() const {
  return _impl_.numbytes_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
GravityMetricsPB::numbytes() const {
  // @@protoc_insertion_point(field_list:gravity.GravityMetricsPB.numBytes)
  return _internal_numbytes();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
GravityMetricsPB::_internal_mutable_numbytes() {
  return &_impl_.numbytes_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
GravityMetricsPB::mutable_numbytes() {
  // @@protoc_insertion_point(field_mutable_list:gravity.GravityMetricsPB.numBytes)
  return _internal_mutable_numbytes();
}

// repeated uint32 numMessages = 6 [packed = true];
inline int GravityMetricsPB::_internal_nummessages_size() const {
  return _impl_.nummessages_.size();
}
inline int GravityMetricsPB::nummessages_size() const {
  return _internal_nummessages_size();
}
inline void GravityMetricsPB::clear_nummessages() {
  _impl_.nummessages_.Clear();
}
inline uint32_t GravityMetricsPB::_internal_nummessages(int index) const {
  return _impl_.nummessages_.Get(index);
}
inline uint32_t GravityMetricsPB::nummessages(int index) const {
  // @@protoc_insertion_point(field_get:gravity.GravityMetricsPB.numMessages)
  return _internal_nummessages(index);
}
inline void GravityMetricsPB::set_nummessages(int index, uint32_t value) {
  _impl_.nummessages_.Set(index, value);
  // @@protoc_insertion_point(field_set:gravity.GravityMetricsPB.numMessages)
}
inline void GravityMetricsPB::_internal_add_nummessages(uint32_t value) {
  _impl_.nummessages_.Add(value);
}
inline void GravityMetricsPB::add_nummessages(uint32_t value) {
  _internal_add_nummessages(value);
  // @@protoc_insertion_point(field_add:gravity.GravityMetricsPB.numMessages)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
GravityMetricsPB::_internal_nummessages() const {
  return _impl_.nummessages_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
GravityMetricsPB::nummessages() const {
  // @@protoc_insertion_point(field_list:gravity.GravityMetricsPB.numMessages)
  return _internal_nummessages();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
GravityMetricsPB::_internal_mutable_nummessages() {
  return &_impl_.nummessages_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
GravityMetricsPB::mutable_nummessages() {
  // @@protoc_insertion_point(field_mutable_list:gravity.GravityMetricsPB.numMessages)
  return _internal_mutable_nummessages();
}

// -------------------------------------------------------------------

// GravityMetricsDataPB

// optional string componentID = 1;
inline bool GravityMetricsDataPB::_internal_has_componentid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool GravityMetricsDataPB::has_componentid() const {
  return _internal_has_componentid();
}
inline void GravityMetricsDataPB::clear_componentid() {
  _impl_.componentid_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GravityMetricsDataPB::componentid() const {
  // @@protoc_insertion_point(field_get:gravity.GravityMetricsDataPB.componentID)
  return _internal_componentid();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GravityMetricsDataPB::set_componentid(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.componentid_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:gravity.GravityMetricsDataPB.componentID)
}
inline std::string* GravityMetricsDataPB::mutable_componentid() {
  std::string* _s = _internal_mutable_componentid();
  // @@protoc_insertion_point(field_mutable:gravity.GravityMetricsDataPB.componentID)
  return _s;
}
inline const std::string& GravityMetricsDataPB::_internal_componentid() const {
  return _impl_.componentid_.Get();
}
inline void GravityMetricsDataPB::_internal_set_componentid(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.componentid_.Set(value, GetArenaForAllocation());
}
inline std::string* GravityMetricsDataPB::_internal_mutable_componentid() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.componentid_.Mutable(GetArenaForAllocation());
}
inline std::string* GravityMetricsDataPB::release_componentid() {
  // @@protoc_insertion_point(field_release:gravity.GravityMetricsDataPB.componentID)
  if (!_internal_has_componentid()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.componentid_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.componentid_.IsDefault()) {
    _impl_.componentid_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GravityMetricsDataPB::set_allocated_componentid(std::string* componentid) {
  if (componentid != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.componentid_.SetAllocated(componentid, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.componentid_.IsDefault()) {
    _impl_.componentid_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:gravity.GravityMetricsDataPB.componentID)
}

// optional string ipAddress = 2;
inline bool GravityMetricsDataPB::_internal_has_ipaddress() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool GravityMetricsDataPB::has_ipaddress() const {
  return _internal_has_ipaddress();
}
inline void GravityMetricsDataPB::clear_ipaddress() {
  _impl_.ipaddress_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& GravityMetricsDataPB::ipaddress() const {
  // @@protoc_insertion_point(field_get:gravity.GravityMetricsDataPB.ipAddress)
  return _internal_ipaddress();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GravityMetricsDataPB::set_ipaddress(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.ipaddress_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:gravity.GravityMetricsDataPB.ipAddress)
}
inline std::string* GravityMetricsDataPB::mutable_ipaddress() {
  std::string* _s = _internal_mutable_ipaddress();
  // @@protoc_insertion_point(field_mutable:gravity.GravityMetricsDataPB.ipAddress)
  return _s;
}
inline const std::string& GravityMetricsDataPB::_internal_ipaddress() const {
  return _impl_.ipaddress_.Get();
}
inline void GravityMetricsDataPB::_internal_set_ipaddress(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.ipaddress_.Set(value, GetArenaForAllocation());
}
inline std::string* GravityMetricsDataPB::_internal_mutable_ipaddress() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.ipaddress_.Mutable(GetArenaForAllocation());
}
inline std::string* GravityMetricsDataPB::release_ipaddress() {
  // @@protoc_insertion_point(field_release:gravity.GravityMetricsDataPB.ipAddress)
  if (!_internal_has_ipaddress()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.ipaddress_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.ipaddress_.IsDefault()) {
    _impl_.ipaddress_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GravityMetricsDataPB::set_allocated_ipaddress(std::string* ipaddress) {
  if (ipaddress != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.ipaddress_.SetAllocated(ipaddress, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.ipaddress_.IsDefault()) {
    _impl_.ipaddress_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:gravity.GravityMetricsDataPB.ipAddress)
}

// repeated .gravity.GravityMetricsPB metrics = 3;
inline int GravityMetricsDataPB::_internal_metrics_size() const {
  return _impl_.metrics_.size();
}
inline int GravityMetricsDataPB::metrics_size() const {
  return _internal_metrics_size();
}
inline void GravityMetricsDataPB::clear_metrics() {
  _impl_.metrics_.Clear();
}
inline ::gravity::GravityMetricsPB* GravityMetricsDataPB::mutable_metrics(int index) {
  // @@protoc_insertion_point(field_mutable:gravity.GravityMetricsDataPB.metrics)
  return _impl_.metrics_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gravity::GravityMetricsPB >*
GravityMetricsDataPB::mutable_metrics() {
  // @@protoc_insertion_point(field_mutable_list:gravity.GravityMetricsDataPB.metrics)
  return &_impl_.metrics_;
}
inline const ::gravity::GravityMetricsPB& GravityMetricsDataPB::_internal_metrics(int index) const {
  return _impl_.metrics_.Get(index);
}
inline const ::gravity::GravityMetricsPB& GravityMetricsDataPB::metrics(int index) const {
  // @@protoc_insertion_point(field_get:gravity.GravityMetricsDataPB.metrics)
  return _internal_metrics(index);
}
inline ::gravity::GravityMetricsPB* GravityMetricsDataPB::_internal_add_metrics() {
  return _impl_.metrics_.Add();
}
inline ::gravity::GravityMetricsPB* GravityMetricsDataPB::add_metrics() {
  ::gravity::GravityMetricsPB* _add = _internal_add_metrics();
  // @@protoc_insertion_point(field_add:gravity.GravityMetricsDataPB.metrics)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gravity::GravityMetricsPB >&
GravityMetricsDataPB::metrics() const {
  // @@protoc_insertion_point(field_list:gravity.GravityMetricsDataPB.metrics)
  return _impl_.metrics_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace gravity

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::gravity::GravityMetricsPB_MessageType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gravity::GravityMetricsPB_MessageType>() {
  return ::gravity::GravityMetricsPB_MessageType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_GravityMetricsDataPB_2eproto
