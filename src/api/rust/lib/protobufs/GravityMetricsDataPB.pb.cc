// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GravityMetricsDataPB.proto

#include "GravityMetricsDataPB.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace gravity {
PROTOBUF_CONSTEXPR GravityMetricsPB::GravityMetricsPB(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.starttime_)*/{}
  , /*decltype(_impl_._starttime_cached_byte_size_)*/{0}
  , /*decltype(_impl_.endtime_)*/{}
  , /*decltype(_impl_._endtime_cached_byte_size_)*/{0}
  , /*decltype(_impl_.numbytes_)*/{}
  , /*decltype(_impl_._numbytes_cached_byte_size_)*/{0}
  , /*decltype(_impl_.nummessages_)*/{}
  , /*decltype(_impl_._nummessages_cached_byte_size_)*/{0}
  , /*decltype(_impl_.dataproductid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.messagetype_)*/0} {}
struct GravityMetricsPBDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GravityMetricsPBDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GravityMetricsPBDefaultTypeInternal() {}
  union {
    GravityMetricsPB _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GravityMetricsPBDefaultTypeInternal _GravityMetricsPB_default_instance_;
PROTOBUF_CONSTEXPR GravityMetricsDataPB::GravityMetricsDataPB(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.metrics_)*/{}
  , /*decltype(_impl_.componentid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.ipaddress_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct GravityMetricsDataPBDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GravityMetricsDataPBDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GravityMetricsDataPBDefaultTypeInternal() {}
  union {
    GravityMetricsDataPB _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GravityMetricsDataPBDefaultTypeInternal _GravityMetricsDataPB_default_instance_;
}  // namespace gravity
static ::_pb::Metadata file_level_metadata_GravityMetricsDataPB_2eproto[2];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_GravityMetricsDataPB_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_GravityMetricsDataPB_2eproto = nullptr;

const uint32_t TableStruct_GravityMetricsDataPB_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::gravity::GravityMetricsPB, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::gravity::GravityMetricsPB, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gravity::GravityMetricsPB, _impl_.dataproductid_),
  PROTOBUF_FIELD_OFFSET(::gravity::GravityMetricsPB, _impl_.messagetype_),
  PROTOBUF_FIELD_OFFSET(::gravity::GravityMetricsPB, _impl_.starttime_),
  PROTOBUF_FIELD_OFFSET(::gravity::GravityMetricsPB, _impl_.endtime_),
  PROTOBUF_FIELD_OFFSET(::gravity::GravityMetricsPB, _impl_.numbytes_),
  PROTOBUF_FIELD_OFFSET(::gravity::GravityMetricsPB, _impl_.nummessages_),
  0,
  1,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::gravity::GravityMetricsDataPB, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::gravity::GravityMetricsDataPB, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::gravity::GravityMetricsDataPB, _impl_.componentid_),
  PROTOBUF_FIELD_OFFSET(::gravity::GravityMetricsDataPB, _impl_.ipaddress_),
  PROTOBUF_FIELD_OFFSET(::gravity::GravityMetricsDataPB, _impl_.metrics_),
  0,
  1,
  ~0u,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 12, -1, sizeof(::gravity::GravityMetricsPB)},
  { 18, 27, -1, sizeof(::gravity::GravityMetricsDataPB)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::gravity::_GravityMetricsPB_default_instance_._instance,
  &::gravity::_GravityMetricsDataPB_default_instance_._instance,
};

const char descriptor_table_protodef_GravityMetricsDataPB_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\032GravityMetricsDataPB.proto\022\007gravity\"\215\002"
  "\n\020GravityMetricsPB\022\025\n\rdataProductID\030\001 \001("
  "\t\022:\n\013messageType\030\002 \001(\0162%.gravity.Gravity"
  "MetricsPB.MessageType\022\025\n\tstartTime\030\003 \003(\004"
  "B\002\020\001\022\023\n\007endTime\030\004 \003(\004B\002\020\001\022\024\n\010numBytes\030\005 "
  "\003(\rB\002\020\001\022\027\n\013numMessages\030\006 \003(\rB\002\020\001\"K\n\013Mess"
  "ageType\022\017\n\013PUBLICATION\020\000\022\020\n\014SUBSCRIPTION"
  "\020\001\022\013\n\007REQUEST\020\002\022\014\n\010RESPONSE\020\003\"j\n\024Gravity"
  "MetricsDataPB\022\023\n\013componentID\030\001 \001(\t\022\021\n\tip"
  "Address\030\002 \001(\t\022*\n\007metrics\030\003 \003(\0132\031.gravity"
  ".GravityMetricsPBB=\n\034com.aphysci.gravity"
  ".protobufB\033GravityMetricsDataContainerH\001"
  ;
static ::_pbi::once_flag descriptor_table_GravityMetricsDataPB_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_GravityMetricsDataPB_2eproto = {
    false, false, 480, descriptor_table_protodef_GravityMetricsDataPB_2eproto,
    "GravityMetricsDataPB.proto",
    &descriptor_table_GravityMetricsDataPB_2eproto_once, nullptr, 0, 2,
    schemas, file_default_instances, TableStruct_GravityMetricsDataPB_2eproto::offsets,
    file_level_metadata_GravityMetricsDataPB_2eproto, file_level_enum_descriptors_GravityMetricsDataPB_2eproto,
    file_level_service_descriptors_GravityMetricsDataPB_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_GravityMetricsDataPB_2eproto_getter() {
  return &descriptor_table_GravityMetricsDataPB_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_GravityMetricsDataPB_2eproto(&descriptor_table_GravityMetricsDataPB_2eproto);
namespace gravity {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GravityMetricsPB_MessageType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_GravityMetricsDataPB_2eproto);
  return file_level_enum_descriptors_GravityMetricsDataPB_2eproto[0];
}
bool GravityMetricsPB_MessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr GravityMetricsPB_MessageType GravityMetricsPB::PUBLICATION;
constexpr GravityMetricsPB_MessageType GravityMetricsPB::SUBSCRIPTION;
constexpr GravityMetricsPB_MessageType GravityMetricsPB::REQUEST;
constexpr GravityMetricsPB_MessageType GravityMetricsPB::RESPONSE;
constexpr GravityMetricsPB_MessageType GravityMetricsPB::MessageType_MIN;
constexpr GravityMetricsPB_MessageType GravityMetricsPB::MessageType_MAX;
constexpr int GravityMetricsPB::MessageType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class GravityMetricsPB::_Internal {
 public:
  using HasBits = decltype(std::declval<GravityMetricsPB>()._impl_._has_bits_);
  static void set_has_dataproductid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_messagetype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

GravityMetricsPB::GravityMetricsPB(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gravity.GravityMetricsPB)
}
GravityMetricsPB::GravityMetricsPB(const GravityMetricsPB& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GravityMetricsPB* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.starttime_){from._impl_.starttime_}
    , /*decltype(_impl_._starttime_cached_byte_size_)*/{0}
    , decltype(_impl_.endtime_){from._impl_.endtime_}
    , /*decltype(_impl_._endtime_cached_byte_size_)*/{0}
    , decltype(_impl_.numbytes_){from._impl_.numbytes_}
    , /*decltype(_impl_._numbytes_cached_byte_size_)*/{0}
    , decltype(_impl_.nummessages_){from._impl_.nummessages_}
    , /*decltype(_impl_._nummessages_cached_byte_size_)*/{0}
    , decltype(_impl_.dataproductid_){}
    , decltype(_impl_.messagetype_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.dataproductid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.dataproductid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_dataproductid()) {
    _this->_impl_.dataproductid_.Set(from._internal_dataproductid(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.messagetype_ = from._impl_.messagetype_;
  // @@protoc_insertion_point(copy_constructor:gravity.GravityMetricsPB)
}

inline void GravityMetricsPB::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.starttime_){arena}
    , /*decltype(_impl_._starttime_cached_byte_size_)*/{0}
    , decltype(_impl_.endtime_){arena}
    , /*decltype(_impl_._endtime_cached_byte_size_)*/{0}
    , decltype(_impl_.numbytes_){arena}
    , /*decltype(_impl_._numbytes_cached_byte_size_)*/{0}
    , decltype(_impl_.nummessages_){arena}
    , /*decltype(_impl_._nummessages_cached_byte_size_)*/{0}
    , decltype(_impl_.dataproductid_){}
    , decltype(_impl_.messagetype_){0}
  };
  _impl_.dataproductid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.dataproductid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GravityMetricsPB::~GravityMetricsPB() {
  // @@protoc_insertion_point(destructor:gravity.GravityMetricsPB)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GravityMetricsPB::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.starttime_.~RepeatedField();
  _impl_.endtime_.~RepeatedField();
  _impl_.numbytes_.~RepeatedField();
  _impl_.nummessages_.~RepeatedField();
  _impl_.dataproductid_.Destroy();
}

void GravityMetricsPB::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GravityMetricsPB::Clear() {
// @@protoc_insertion_point(message_clear_start:gravity.GravityMetricsPB)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.starttime_.Clear();
  _impl_.endtime_.Clear();
  _impl_.numbytes_.Clear();
  _impl_.nummessages_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.dataproductid_.ClearNonDefaultToEmpty();
  }
  _impl_.messagetype_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GravityMetricsPB::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string dataProductID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_dataproductid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "gravity.GravityMetricsPB.dataProductID");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional .gravity.GravityMetricsPB.MessageType messageType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::gravity::GravityMetricsPB_MessageType_IsValid(val))) {
            _internal_set_messagetype(static_cast<::gravity::GravityMetricsPB_MessageType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // repeated uint64 startTime = 3 [packed = true];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_starttime(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          _internal_add_starttime(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated uint64 endTime = 4 [packed = true];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_endtime(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 32) {
          _internal_add_endtime(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated uint32 numBytes = 5 [packed = true];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_numbytes(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 40) {
          _internal_add_numbytes(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated uint32 numMessages = 6 [packed = true];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_nummessages(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 48) {
          _internal_add_nummessages(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GravityMetricsPB::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gravity.GravityMetricsPB)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string dataProductID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_dataproductid().data(), static_cast<int>(this->_internal_dataproductid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "gravity.GravityMetricsPB.dataProductID");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_dataproductid(), target);
  }

  // optional .gravity.GravityMetricsPB.MessageType messageType = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_messagetype(), target);
  }

  // repeated uint64 startTime = 3 [packed = true];
  {
    int byte_size = _impl_._starttime_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          3, _internal_starttime(), byte_size, target);
    }
  }

  // repeated uint64 endTime = 4 [packed = true];
  {
    int byte_size = _impl_._endtime_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          4, _internal_endtime(), byte_size, target);
    }
  }

  // repeated uint32 numBytes = 5 [packed = true];
  {
    int byte_size = _impl_._numbytes_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          5, _internal_numbytes(), byte_size, target);
    }
  }

  // repeated uint32 numMessages = 6 [packed = true];
  {
    int byte_size = _impl_._nummessages_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          6, _internal_nummessages(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gravity.GravityMetricsPB)
  return target;
}

size_t GravityMetricsPB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gravity.GravityMetricsPB)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 startTime = 3 [packed = true];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt64Size(this->_impl_.starttime_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._starttime_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated uint64 endTime = 4 [packed = true];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt64Size(this->_impl_.endtime_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._endtime_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated uint32 numBytes = 5 [packed = true];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt32Size(this->_impl_.numbytes_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._numbytes_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated uint32 numMessages = 6 [packed = true];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt32Size(this->_impl_.nummessages_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._nummessages_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string dataProductID = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_dataproductid());
    }

    // optional .gravity.GravityMetricsPB.MessageType messageType = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_messagetype());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GravityMetricsPB::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GravityMetricsPB::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GravityMetricsPB::GetClassData() const { return &_class_data_; }


void GravityMetricsPB::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GravityMetricsPB*>(&to_msg);
  auto& from = static_cast<const GravityMetricsPB&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gravity.GravityMetricsPB)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.starttime_.MergeFrom(from._impl_.starttime_);
  _this->_impl_.endtime_.MergeFrom(from._impl_.endtime_);
  _this->_impl_.numbytes_.MergeFrom(from._impl_.numbytes_);
  _this->_impl_.nummessages_.MergeFrom(from._impl_.nummessages_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_dataproductid(from._internal_dataproductid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.messagetype_ = from._impl_.messagetype_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GravityMetricsPB::CopyFrom(const GravityMetricsPB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gravity.GravityMetricsPB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GravityMetricsPB::IsInitialized() const {
  return true;
}

void GravityMetricsPB::InternalSwap(GravityMetricsPB* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.starttime_.InternalSwap(&other->_impl_.starttime_);
  _impl_.endtime_.InternalSwap(&other->_impl_.endtime_);
  _impl_.numbytes_.InternalSwap(&other->_impl_.numbytes_);
  _impl_.nummessages_.InternalSwap(&other->_impl_.nummessages_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.dataproductid_, lhs_arena,
      &other->_impl_.dataproductid_, rhs_arena
  );
  swap(_impl_.messagetype_, other->_impl_.messagetype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GravityMetricsPB::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_GravityMetricsDataPB_2eproto_getter, &descriptor_table_GravityMetricsDataPB_2eproto_once,
      file_level_metadata_GravityMetricsDataPB_2eproto[0]);
}

// ===================================================================

class GravityMetricsDataPB::_Internal {
 public:
  using HasBits = decltype(std::declval<GravityMetricsDataPB>()._impl_._has_bits_);
  static void set_has_componentid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_ipaddress(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

GravityMetricsDataPB::GravityMetricsDataPB(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:gravity.GravityMetricsDataPB)
}
GravityMetricsDataPB::GravityMetricsDataPB(const GravityMetricsDataPB& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GravityMetricsDataPB* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.metrics_){from._impl_.metrics_}
    , decltype(_impl_.componentid_){}
    , decltype(_impl_.ipaddress_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.componentid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.componentid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_componentid()) {
    _this->_impl_.componentid_.Set(from._internal_componentid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.ipaddress_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ipaddress_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_ipaddress()) {
    _this->_impl_.ipaddress_.Set(from._internal_ipaddress(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:gravity.GravityMetricsDataPB)
}

inline void GravityMetricsDataPB::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.metrics_){arena}
    , decltype(_impl_.componentid_){}
    , decltype(_impl_.ipaddress_){}
  };
  _impl_.componentid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.componentid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.ipaddress_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ipaddress_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GravityMetricsDataPB::~GravityMetricsDataPB() {
  // @@protoc_insertion_point(destructor:gravity.GravityMetricsDataPB)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GravityMetricsDataPB::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.metrics_.~RepeatedPtrField();
  _impl_.componentid_.Destroy();
  _impl_.ipaddress_.Destroy();
}

void GravityMetricsDataPB::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GravityMetricsDataPB::Clear() {
// @@protoc_insertion_point(message_clear_start:gravity.GravityMetricsDataPB)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.metrics_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.componentid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.ipaddress_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GravityMetricsDataPB::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string componentID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_componentid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "gravity.GravityMetricsDataPB.componentID");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string ipAddress = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_ipaddress();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "gravity.GravityMetricsDataPB.ipAddress");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // repeated .gravity.GravityMetricsPB metrics = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_metrics(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GravityMetricsDataPB::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gravity.GravityMetricsDataPB)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string componentID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_componentid().data(), static_cast<int>(this->_internal_componentid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "gravity.GravityMetricsDataPB.componentID");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_componentid(), target);
  }

  // optional string ipAddress = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_ipaddress().data(), static_cast<int>(this->_internal_ipaddress().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "gravity.GravityMetricsDataPB.ipAddress");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_ipaddress(), target);
  }

  // repeated .gravity.GravityMetricsPB metrics = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_metrics_size()); i < n; i++) {
    const auto& repfield = this->_internal_metrics(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gravity.GravityMetricsDataPB)
  return target;
}

size_t GravityMetricsDataPB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gravity.GravityMetricsDataPB)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gravity.GravityMetricsPB metrics = 3;
  total_size += 1UL * this->_internal_metrics_size();
  for (const auto& msg : this->_impl_.metrics_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string componentID = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_componentid());
    }

    // optional string ipAddress = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_ipaddress());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GravityMetricsDataPB::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GravityMetricsDataPB::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GravityMetricsDataPB::GetClassData() const { return &_class_data_; }


void GravityMetricsDataPB::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GravityMetricsDataPB*>(&to_msg);
  auto& from = static_cast<const GravityMetricsDataPB&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gravity.GravityMetricsDataPB)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.metrics_.MergeFrom(from._impl_.metrics_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_componentid(from._internal_componentid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_ipaddress(from._internal_ipaddress());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GravityMetricsDataPB::CopyFrom(const GravityMetricsDataPB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gravity.GravityMetricsDataPB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GravityMetricsDataPB::IsInitialized() const {
  return true;
}

void GravityMetricsDataPB::InternalSwap(GravityMetricsDataPB* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.metrics_.InternalSwap(&other->_impl_.metrics_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.componentid_, lhs_arena,
      &other->_impl_.componentid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.ipaddress_, lhs_arena,
      &other->_impl_.ipaddress_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GravityMetricsDataPB::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_GravityMetricsDataPB_2eproto_getter, &descriptor_table_GravityMetricsDataPB_2eproto_once,
      file_level_metadata_GravityMetricsDataPB_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace gravity
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::gravity::GravityMetricsPB*
Arena::CreateMaybeMessage< ::gravity::GravityMetricsPB >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gravity::GravityMetricsPB >(arena);
}
template<> PROTOBUF_NOINLINE ::gravity::GravityMetricsDataPB*
Arena::CreateMaybeMessage< ::gravity::GravityMetricsDataPB >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gravity::GravityMetricsDataPB >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
