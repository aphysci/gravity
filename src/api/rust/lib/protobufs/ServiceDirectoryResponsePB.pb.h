// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServiceDirectoryResponsePB.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ServiceDirectoryResponsePB_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ServiceDirectoryResponsePB_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ServiceDirectoryResponsePB_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ServiceDirectoryResponsePB_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ServiceDirectoryResponsePB_2eproto;
namespace gravity {
class ServiceDirectoryResponsePB;
struct ServiceDirectoryResponsePBDefaultTypeInternal;
extern ServiceDirectoryResponsePBDefaultTypeInternal _ServiceDirectoryResponsePB_default_instance_;
}  // namespace gravity
PROTOBUF_NAMESPACE_OPEN
template<> ::gravity::ServiceDirectoryResponsePB* Arena::CreateMaybeMessage<::gravity::ServiceDirectoryResponsePB>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace gravity {

enum ServiceDirectoryResponsePB_ReturnCodes : int {
  ServiceDirectoryResponsePB_ReturnCodes_SUCCESS = 0,
  ServiceDirectoryResponsePB_ReturnCodes_DUPLICATE_REGISTRATION = -1,
  ServiceDirectoryResponsePB_ReturnCodes_REGISTRATION_CONFLICT = -2,
  ServiceDirectoryResponsePB_ReturnCodes_NOT_REGISTERED = -3
};
bool ServiceDirectoryResponsePB_ReturnCodes_IsValid(int value);
constexpr ServiceDirectoryResponsePB_ReturnCodes ServiceDirectoryResponsePB_ReturnCodes_ReturnCodes_MIN = ServiceDirectoryResponsePB_ReturnCodes_NOT_REGISTERED;
constexpr ServiceDirectoryResponsePB_ReturnCodes ServiceDirectoryResponsePB_ReturnCodes_ReturnCodes_MAX = ServiceDirectoryResponsePB_ReturnCodes_SUCCESS;
constexpr int ServiceDirectoryResponsePB_ReturnCodes_ReturnCodes_ARRAYSIZE = ServiceDirectoryResponsePB_ReturnCodes_ReturnCodes_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ServiceDirectoryResponsePB_ReturnCodes_descriptor();
template<typename T>
inline const std::string& ServiceDirectoryResponsePB_ReturnCodes_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ServiceDirectoryResponsePB_ReturnCodes>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ServiceDirectoryResponsePB_ReturnCodes_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ServiceDirectoryResponsePB_ReturnCodes_descriptor(), enum_t_value);
}
inline bool ServiceDirectoryResponsePB_ReturnCodes_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ServiceDirectoryResponsePB_ReturnCodes* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ServiceDirectoryResponsePB_ReturnCodes>(
    ServiceDirectoryResponsePB_ReturnCodes_descriptor(), name, value);
}
// ===================================================================

class ServiceDirectoryResponsePB final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gravity.ServiceDirectoryResponsePB) */ {
 public:
  inline ServiceDirectoryResponsePB() : ServiceDirectoryResponsePB(nullptr) {}
  ~ServiceDirectoryResponsePB() override;
  explicit PROTOBUF_CONSTEXPR ServiceDirectoryResponsePB(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServiceDirectoryResponsePB(const ServiceDirectoryResponsePB& from);
  ServiceDirectoryResponsePB(ServiceDirectoryResponsePB&& from) noexcept
    : ServiceDirectoryResponsePB() {
    *this = ::std::move(from);
  }

  inline ServiceDirectoryResponsePB& operator=(const ServiceDirectoryResponsePB& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServiceDirectoryResponsePB& operator=(ServiceDirectoryResponsePB&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServiceDirectoryResponsePB& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServiceDirectoryResponsePB* internal_default_instance() {
    return reinterpret_cast<const ServiceDirectoryResponsePB*>(
               &_ServiceDirectoryResponsePB_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ServiceDirectoryResponsePB& a, ServiceDirectoryResponsePB& b) {
    a.Swap(&b);
  }
  inline void Swap(ServiceDirectoryResponsePB* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServiceDirectoryResponsePB* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServiceDirectoryResponsePB* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServiceDirectoryResponsePB>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServiceDirectoryResponsePB& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServiceDirectoryResponsePB& from) {
    ServiceDirectoryResponsePB::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServiceDirectoryResponsePB* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gravity.ServiceDirectoryResponsePB";
  }
  protected:
  explicit ServiceDirectoryResponsePB(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ServiceDirectoryResponsePB_ReturnCodes ReturnCodes;
  static constexpr ReturnCodes SUCCESS =
    ServiceDirectoryResponsePB_ReturnCodes_SUCCESS;
  static constexpr ReturnCodes DUPLICATE_REGISTRATION =
    ServiceDirectoryResponsePB_ReturnCodes_DUPLICATE_REGISTRATION;
  static constexpr ReturnCodes REGISTRATION_CONFLICT =
    ServiceDirectoryResponsePB_ReturnCodes_REGISTRATION_CONFLICT;
  static constexpr ReturnCodes NOT_REGISTERED =
    ServiceDirectoryResponsePB_ReturnCodes_NOT_REGISTERED;
  static inline bool ReturnCodes_IsValid(int value) {
    return ServiceDirectoryResponsePB_ReturnCodes_IsValid(value);
  }
  static constexpr ReturnCodes ReturnCodes_MIN =
    ServiceDirectoryResponsePB_ReturnCodes_ReturnCodes_MIN;
  static constexpr ReturnCodes ReturnCodes_MAX =
    ServiceDirectoryResponsePB_ReturnCodes_ReturnCodes_MAX;
  static constexpr int ReturnCodes_ARRAYSIZE =
    ServiceDirectoryResponsePB_ReturnCodes_ReturnCodes_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  ReturnCodes_descriptor() {
    return ServiceDirectoryResponsePB_ReturnCodes_descriptor();
  }
  template<typename T>
  static inline const std::string& ReturnCodes_Name(T enum_t_value) {
    static_assert(::std::is_same<T, ReturnCodes>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function ReturnCodes_Name.");
    return ServiceDirectoryResponsePB_ReturnCodes_Name(enum_t_value);
  }
  static inline bool ReturnCodes_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      ReturnCodes* value) {
    return ServiceDirectoryResponsePB_ReturnCodes_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kReturnCodeFieldNumber = 2,
  };
  // required string id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  const std::string& id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* id);
  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(const std::string& value);
  std::string* _internal_mutable_id();
  public:

  // optional .gravity.ServiceDirectoryResponsePB.ReturnCodes returnCode = 2 [default = SUCCESS];
  bool has_returncode() const;
  private:
  bool _internal_has_returncode() const;
  public:
  void clear_returncode();
  ::gravity::ServiceDirectoryResponsePB_ReturnCodes returncode() const;
  void set_returncode(::gravity::ServiceDirectoryResponsePB_ReturnCodes value);
  private:
  ::gravity::ServiceDirectoryResponsePB_ReturnCodes _internal_returncode() const;
  void _internal_set_returncode(::gravity::ServiceDirectoryResponsePB_ReturnCodes value);
  public:

  // @@protoc_insertion_point(class_scope:gravity.ServiceDirectoryResponsePB)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
    int returncode_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ServiceDirectoryResponsePB_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ServiceDirectoryResponsePB

// required string id = 1;
inline bool ServiceDirectoryResponsePB::_internal_has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ServiceDirectoryResponsePB::has_id() const {
  return _internal_has_id();
}
inline void ServiceDirectoryResponsePB::clear_id() {
  _impl_.id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ServiceDirectoryResponsePB::id() const {
  // @@protoc_insertion_point(field_get:gravity.ServiceDirectoryResponsePB.id)
  return _internal_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ServiceDirectoryResponsePB::set_id(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.id_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:gravity.ServiceDirectoryResponsePB.id)
}
inline std::string* ServiceDirectoryResponsePB::mutable_id() {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:gravity.ServiceDirectoryResponsePB.id)
  return _s;
}
inline const std::string& ServiceDirectoryResponsePB::_internal_id() const {
  return _impl_.id_.Get();
}
inline void ServiceDirectoryResponsePB::_internal_set_id(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(value, GetArenaForAllocation());
}
inline std::string* ServiceDirectoryResponsePB::_internal_mutable_id() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.id_.Mutable(GetArenaForAllocation());
}
inline std::string* ServiceDirectoryResponsePB::release_id() {
  // @@protoc_insertion_point(field_release:gravity.ServiceDirectoryResponsePB.id)
  if (!_internal_has_id()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.id_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void ServiceDirectoryResponsePB::set_allocated_id(std::string* id) {
  if (id != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.id_.SetAllocated(id, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:gravity.ServiceDirectoryResponsePB.id)
}

// optional .gravity.ServiceDirectoryResponsePB.ReturnCodes returnCode = 2 [default = SUCCESS];
inline bool ServiceDirectoryResponsePB::_internal_has_returncode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ServiceDirectoryResponsePB::has_returncode() const {
  return _internal_has_returncode();
}
inline void ServiceDirectoryResponsePB::clear_returncode() {
  _impl_.returncode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::gravity::ServiceDirectoryResponsePB_ReturnCodes ServiceDirectoryResponsePB::_internal_returncode() const {
  return static_cast< ::gravity::ServiceDirectoryResponsePB_ReturnCodes >(_impl_.returncode_);
}
inline ::gravity::ServiceDirectoryResponsePB_ReturnCodes ServiceDirectoryResponsePB::returncode() const {
  // @@protoc_insertion_point(field_get:gravity.ServiceDirectoryResponsePB.returnCode)
  return _internal_returncode();
}
inline void ServiceDirectoryResponsePB::_internal_set_returncode(::gravity::ServiceDirectoryResponsePB_ReturnCodes value) {
  assert(::gravity::ServiceDirectoryResponsePB_ReturnCodes_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.returncode_ = value;
}
inline void ServiceDirectoryResponsePB::set_returncode(::gravity::ServiceDirectoryResponsePB_ReturnCodes value) {
  _internal_set_returncode(value);
  // @@protoc_insertion_point(field_set:gravity.ServiceDirectoryResponsePB.returnCode)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace gravity

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::gravity::ServiceDirectoryResponsePB_ReturnCodes> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gravity::ServiceDirectoryResponsePB_ReturnCodes>() {
  return ::gravity::ServiceDirectoryResponsePB_ReturnCodes_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ServiceDirectoryResponsePB_2eproto
