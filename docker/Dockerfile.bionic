# This Dockerfile will build or test gravity using system dependencies on Ubuntu bionic.  The build will be a top-level build
# so each source file compilation step is shown
#
# To Test:
#   To run the Python Pub-Sub test with this dockerfile use the following in the gravity base directory:
#       $ docker build --target tester -t gravity:bionic --rm -f docker/Dockerfile.bionic . && docker run --rm -it gravity:bionic
# 
# To Build:
#   The recommended command to build gravity with this Dockerfile is with the following in the gravity base directory: 
#       $ docker build -f docker/Dockerfile.bionic --output=. . --progress=plain
#
#   This will place the built tarball in the cwd

FROM ubuntu:18.04 AS base

RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
    openssl libssl-dev ca-certificates gnupg gpg wget

# If needed, put ProxyCert.crt in the build context, if missing this shouldn't fail
COPY ProxyCert.* /usr/local/share/ca-certificates
RUN update-ca-certificates

# install the kitware repo to get the latest cmake on bionic
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y apt-transport-https
RUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null
RUN echo 'deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ bionic main' | tee /etc/apt/sources.list.d/kitware.list >/dev/null
RUN apt-get update

# install the latest git
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y software-properties-common
RUN add-apt-repository -y ppa:git-core/ppa

RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
    python3 python3-dev python3-pip python3-protobuf build-essential cmake git \
    lcov doxygen libzmq3-dev protobuf-compiler libprotoc-dev default-jre default-jdk libprotobuf-java \
    libboost-dev libbson-dev libbson-1.0-0 curl flex bison swig ninja-build

# the spdlog in the bionic repo is too old for gravity
ADD https://launchpad.net/ubuntu/+archive/primary/+files/libspdlog-dev_1.5.0-1_amd64.deb .
RUN dpkg --force-all -i libspdlog-dev_1.5.0-1_amd64.deb

# delete the binary target for spdlog - it's too new to be linked against on bionic
# and we just need spdlog in header only form
RUN rm /usr/lib/x86_64-linux-gnu/cmake/spdlog/spdlogConfigTargets-none.cmake

# note: uid 1001 to match the CI VM user id for the bionic build workaround on GitHub
RUN adduser --disabled-password --gecos "" --uid 1001 aps

# Remove ProxyCert since the base stage is a public image
RUN if [ -f /usr/local/share/ca-certificates/ProxyCert.crt ]; then \
        rm /usr/local/share/ca-certificates/ProxyCert.crt && update-ca-certificates; \
    fi;

FROM base AS builder
WORKDIR /home/aps/git/gravity

# Add the gravity source tree as it is locally
ADD ./ .

WORKDIR /home/aps/git/gravity/build
RUN chown -R aps:aps /home/aps/git/
RUN mkdir /opt/aps/
RUN chown -R aps:aps /opt/aps
USER aps
RUN cmake -DCMAKE_INSTALL_PREFIX=install -DCMAKE_BUILD_TYPE=Release -GNinja ..
RUN cmake --build . --target install --parallel
RUN ln -sf ./install ./gravity && tar -czvhf /home/aps/git/gravity-$(cat ./install/VERSION.txt)-bionic_amd64.tar.gz ./gravity
RUN echo "tarball is: gravity-$(cat ./install/VERSION.txt)-bionic_amd64.tar.gz"

FROM builder AS tester
ENV LD_LIBRARY_PATH=/home/aps/git/gravity/build/install/lib
RUN <<EOF
echo "#!/bin/bash" >> ./test.sh
echo "/home/aps/git/gravity/build/install/bin/ServiceDirectory &" >> ./test.sh
echo "ctest --verbose" >> ./test.sh
EOF
RUN chmod a+x ./test.sh
CMD ["./test.sh"]

FROM scratch AS exporter
COPY --from=builder /home/aps/git/*.tar.gz /

