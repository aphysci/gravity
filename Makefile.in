# (C) Copyright 2013, Applied Physical Sciences Corp., A General Dynamics Company
#
# Gravity is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this program;
# If not, see <http://www.gnu.org/licenses/>.


# @configure_input@

# Package-related substitution variables
package        = @PACKAGE_NAME@
version        = @PACKAGE_VERSION@
tarname        = @PACKAGE_TARNAME@

# Prefix-related substitution variables
prefix         = @prefix@
exec_prefix    = @exec_prefix@
bindir         = @bindir@

# Tool-related substitution variables
CC             = @CC@
DEFS           = @DEFS@
LIBS           = @LIBS@
CFLAGS         = @CFLAGS@
CPPFLAGS       = @CPPFLAGS@
INSTALL        = @INSTALL@
INSTALL_DATA   = @INSTALL_DATA@
INSTALL_PROGRAM= @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
WITHOUT_JAVA   = @WITHOUT_JAVA@
WITHOUT_PYTHON = @WITHOUT_PYTHON@

# VPATH-related substitution variables
top_builddir   = @top_builddir@
builddir       = @builddir@
srcdir         = @srcdir@
VPATH          = @srcdir@ 

all clean:
	$(MAKE) -C src/keyvalue_parser $@
	$(MAKE) -C src/api/cpp $@
	$(MAKE) -C src/components/cpp/Archiver $@
	$(MAKE) -C src/components/cpp/LogRecorder $@
	$(MAKE) -C src/components/cpp/Playback $@
	$(MAKE) -C src/components/cpp/ServiceDirectory $@
	$(MAKE) -C src/components/cpp/ConfigServer $@
	$(MAKE) -C src/components/cpp/Relay $@
	$(MAKE) -C src/components/cpp/GravityMOOS $@
	$(MAKE) -C test/examples/1-BasicDataProduct $@
	$(MAKE) -C test/examples/2-ProtobufDataProduct $@
	$(MAKE) -C test/examples/3-MultipleDataProduct $@
	$(MAKE) -C test/examples/4-BasicService $@
	$(MAKE) -C test/examples/5-MiscFunctionality $@
	$(MAKE) -C test/examples/8-ConfigFile $@
	$(MAKE) -C test/examples/9-Domains $@
	$(MAKE) -C test/examples/10-Archiving $@
	$(MAKE) -C test/examples/13-Relay $@

	# Perform each of the following in their own if block, otherwise a failure in the below make commands
	# won't cause the overall build to fail.
	@if test ${WITHOUT_JAVA} = no;\
	then \
		$(MAKE) -C src/api/java $@;\
	fi
	@if test ${WITHOUT_JAVA} = no;\
	then \
		$(MAKE) -C src/api/MATLAB $@;\
	fi
	@if test ${WITHOUT_JAVA} = no;\
	then \
		$(MAKE) -C test/examples/6-JavaProtobufDataProduct $@;\
	fi
	@if test ${WITHOUT_JAVA} = no;\
	then \
		$(MAKE) -C test/examples/7-JavaBasicService $@;\
	fi
	@if test ${WITHOUT_PYTHON} = no;\
	then \
		$(MAKE) -C src/api/python $@;\
	fi
	@if test ${WITHOUT_PYTHON} = no;\
	then \
		$(MAKE) -C test/examples/11-PythonPubSub $@;\
	fi
	@if test ${WITHOUT_PYTHON} = no;\
	then \
		$(MAKE) -C test/examples/12-PythonBasicService $@;\
	fi

Makefile: Makefile.in config.status
	./config.status $@

config.status: configure
	./config.status --recheck

components:
	rm -rf src/components/cpp/bin
	mkdir src/components/cpp/bin
	cp src/components/cpp/Archiver/FileArchiver src/components/cpp/bin
	cp src/components/cpp/LogRecorder/LogRecorder src/components/cpp/bin
	cp src/components/cpp/Playback/FileReplay src/components/cpp/bin
	cp src/components/cpp/ServiceDirectory/ServiceDirectory src/components/cpp/bin
	cp src/components/cpp/ConfigServer/ConfigServer src/components/cpp/bin
	cp src/components/cpp/Relay/Relay src/components/cpp/bin
	cp src/components/cpp/GravityMOOS/GravityMOOS src/components/cpp/bin

test-prep:
#	cp src/api/cpp/libgravity.a ${prefix}/lib
#	cp src/api/cpp/libgravity.so ${prefix}/lib
#	cp src/api/java/libgravity_wrap.so ${prefix}/lib
	chmod 755 test/examples/1-BasicDataProduct/run.sh
	chmod 755 test/examples/2-ProtobufDataProduct/run.sh
	chmod 755 test/examples/3-MultipleDataProduct/run.sh
	chmod 755 test/examples/4-BasicService/run.sh
	chmod 755 test/examples/5-MiscFunctionality/run.sh
	chmod 755 test/examples/6-JavaProtobufDataProduct/run.sh
	chmod 755 test/examples/7-JavaBasicService/run.sh
	chmod 755 test/examples/8-ConfigFile/run.sh
	chmod 755 test/examples/9-Domains/run.sh
	chmod 755 test/examples/10-Archiving/run.sh
	chmod 755 test/examples/11-PythonPubSub/run.sh
	chmod 755 test/examples/12-PythonBasicService/run.sh
	chmod 755 test/examples/13-Relay/run.sh

test: distributable test-prep components
	./test/testall.sh

distributable: all components

	rm -rf bin lib include
	mkdir bin
	cp src/components/cpp/bin/* bin

	mkdir lib
	cp src/keyvalue_parser/*.a lib
	cp src/keyvalue_parser/*.so lib
	cp src/api/cpp/*.a lib
	cp src/api/cpp/*.so lib

	mkdir include
	cp -r src/api/cpp/*.h include
	mkdir include/protobuf
	cp src/api/cpp/protobuf/*.h include/protobuf

	@if test ${WITHOUT_JAVA} = no;\
	then \
		cp src/api/java/*.so lib; \
		cp src/api/java/*.jar lib; \
		mkdir include/MATLAB; \
		cp src/api/MATLAB/*.m include/MATLAB; \
		mkdir lib/MATLAB; \
		cp src/api/MATLAB/*.jar lib/MATLAB; \
		cp src/api/MATLAB/LICENSE* lib/MATLAB; \
	fi

	@if test ${WITHOUT_PYTHON} = no;\
	then \
		cp -r src/api/python/src/python/gravity lib; \
		cp src/api/python/*.so lib/gravity; \
	fi

	echo building Gravity tarball...
	rm -f gravity.tgz 
	@if [ -d .git ]; then \
		git describe --tags > VERSION.txt; \
		tar czf gravity.tgz bin lib include VERSION.txt; \
	else \
		tar czf gravity.tgz bin lib include; \
	fi

	

.PHONY: all clean test install
